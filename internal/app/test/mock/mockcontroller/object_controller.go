// Code generated by MockGen. DO NOT EDIT.
// Source: object_controller.go

// Package mockcontroller is a generated GoMock package.
package mockcontroller

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockObjectController is a mock of ObjectController interface
type MockObjectController struct {
	ctrl     *gomock.Controller
	recorder *MockObjectControllerMockRecorder
}

// MockObjectControllerMockRecorder is the mock recorder for MockObjectController
type MockObjectControllerMockRecorder struct {
	mock *MockObjectController
}

// NewMockObjectController creates a new mock instance
func NewMockObjectController(ctrl *gomock.Controller) *MockObjectController {
	mock := &MockObjectController{ctrl: ctrl}
	mock.recorder = &MockObjectControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockObjectController) EXPECT() *MockObjectControllerMockRecorder {
	return m.recorder
}

// CreateThumbnail mocks base method
func (m *MockObjectController) CreateThumbnail(ctx context.Context, key, bucketName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateThumbnail", ctx, key, bucketName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateThumbnail indicates an expected call of CreateThumbnail
func (mr *MockObjectControllerMockRecorder) CreateThumbnail(ctx, key, bucketName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThumbnail", reflect.TypeOf((*MockObjectController)(nil).CreateThumbnail), ctx, key, bucketName)
}
