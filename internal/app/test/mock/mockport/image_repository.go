// Code generated by MockGen. DO NOT EDIT.
// Source: image_repository.go

// Package mockport is a generated GoMock package.
package mockport

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	domain "github.com/mububoki/create-thumbnails-lambda/internal/app/domain"
	reflect "reflect"
)

// MockImageRepository is a mock of ImageRepository interface
type MockImageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockImageRepositoryMockRecorder
}

// MockImageRepositoryMockRecorder is the mock recorder for MockImageRepository
type MockImageRepositoryMockRecorder struct {
	mock *MockImageRepository
}

// NewMockImageRepository creates a new mock instance
func NewMockImageRepository(ctrl *gomock.Controller) *MockImageRepository {
	mock := &MockImageRepository{ctrl: ctrl}
	mock.recorder = &MockImageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageRepository) EXPECT() *MockImageRepositoryMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockImageRepository) Save(arg0 context.Context, arg1 *domain.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockImageRepositoryMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockImageRepository)(nil).Save), arg0, arg1)
}

// Find mocks base method
func (m *MockImageRepository) Find(ctx context.Context, name string, format domain.ImageFormat, isThumbnail bool) (*domain.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", ctx, name, format, isThumbnail)
	ret0, _ := ret[0].(*domain.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find
func (mr *MockImageRepositoryMockRecorder) Find(ctx, name, format, isThumbnail interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockImageRepository)(nil).Find), ctx, name, format, isThumbnail)
}
