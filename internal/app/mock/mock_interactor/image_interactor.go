// Code generated by MockGen. DO NOT EDIT.
// Source: image_interactor.go

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	domain "github.com/mububoki/create-thumbnails-lambda/internal/app/domain"
	reflect "reflect"
)

// MockImageInteractor is a mock of ImageInteractor interface
type MockImageInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockImageInteractorMockRecorder
}

// MockImageInteractorMockRecorder is the mock recorder for MockImageInteractor
type MockImageInteractorMockRecorder struct {
	mock *MockImageInteractor
}

// NewMockImageInteractor creates a new mock instance
func NewMockImageInteractor(ctrl *gomock.Controller) *MockImageInteractor {
	mock := &MockImageInteractor{ctrl: ctrl}
	mock.recorder = &MockImageInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageInteractor) EXPECT() *MockImageInteractorMockRecorder {
	return m.recorder
}

// CreateThumbnail mocks base method
func (m *MockImageInteractor) CreateThumbnail(ctx context.Context, name string, format domain.ImageFormat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateThumbnail", ctx, name, format)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateThumbnail indicates an expected call of CreateThumbnail
func (mr *MockImageInteractorMockRecorder) CreateThumbnail(ctx, name, format interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThumbnail", reflect.TypeOf((*MockImageInteractor)(nil).CreateThumbnail), ctx, name, format)
}
